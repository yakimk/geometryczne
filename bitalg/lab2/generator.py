# ! = \{    @ =\} 
spec = [[[100, 1000, 10000, 100000, 1000000], [100, 1000, 10000, 100000, 1000000]],
 [[10, 100, 1000, 10000], [10, 100, 1000, 10000]],
 [[10, 100, 1000, 10000, 100000], [10, 100, 1000, 10000, 100000]],
 [[100, 1000, 10000, 100000, 1000000], [100, 1000, 10000, 100000, 1000000]]]
b_spec = [[], [10, 100, 1000, 10000]]
times = [[0.0005893707275390625,
  0.0005006790161132812,
  0.007127523422241211,
  0.01019287109375,
  0.08750700950622559,
  0.10708951950073242,
  1.2220854759216309,
  1.7707273960113525,
  15.013105869293213,
  25.266388654708862],
 [0.00019884109497070312,
  0.00032138824462890625,
  0.0023965835571289062,
  0.03295278549194336,
  0.02292346954345703,
  0.7272202968597412,
  0.13237595558166504,
  77.84130191802979],
 [0.00029969215393066406,
  0.0001418590545654297,
  0.0037729740142822266,
  0.0011968612670898438,
  0.0562436580657959,
  0.010904788970947266,
  0.7590024471282959,
  0.11707210540771484,
  9.165144920349121,
  1.253824234008789],
 [0.0015366077423095703,
  0.0007996559143066406,
  0.026697397232055664,
  0.011160135269165039,
  0.2120823860168457,
  0.07677173614501953,
  2.8156211376190186,
  0.9206950664520264,
  37.919477462768555,
  9.709136724472046]]
def gen_tab(spec, test_set):
    letter = ['a', 'b', 'c', 'd']
    letter = letter[test_set]
    n = len(spec[1])

    points = graham = jarvis= ""
    for i in range(n):
        points += "& "
        points += str(spec[1][i])
        graham += "& "
        graham += str(round(times[test_set][2* i], 3))
        jarvis += "& "
        jarvis += str(round(times[test_set][2*i + 1], 3))

    s = '''
\\begin!table@[ht]
    \\centering
\\begin!tabular@!l  {rs}@
    & \\multicolumn!{n}@!c@!\\textbf!Liczba punktów@@ \\\\ \\cline!2-{np}@     
    \\multicolumn!1@!l|@!\\textbf!Algorytm@@ & !{points} \\\\
   \\hline
   \\hline
   \\multicolumn!1@!l|@!\\textbf!Graham@@ {Graham} \\\\
   \\hline
   \\multicolumn!1@!l|@!\\textbf!Jarvis@@ {Jarvis} \\\\
   \\cline!2-{np}@
\\end!tabular@
\\caption*!Tabela {test_set}: Czasy wykonania algorytmów na zbiorze testowym ${letter}$.@
\\end!table@
'''.format(rs = "r|" * n, n=n, np = n+1, points= points, Graham = graham, Jarvis = jarvis, test_set  = test_set+1, letter = letter)
    s = s.replace("@", "}")
    s = s.replace("!", "{")
    print(s)
    return s

gen_tab(spec[3], 3)